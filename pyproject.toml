[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "obsidian-capture"
version = "0.2.0"
description = "HTML to Markdown capture tool for Obsidian vault"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Developer", email = "developer@example.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "requests>=2.28.0",
    "beautifulsoup4>=4.11.0",
    "html2text>=2020.1.16",
    "PyYAML>=6.0",
    "python-slugify>=8.0.0",
    "python-dateutil>=2.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "vcrpy>=4.2.0",
    "ruff>=0.0.280",
    "mypy>=1.0.0",
    "types-requests",
    "types-PyYAML",
    "types-python-dateutil",
]

[project.scripts]
obsidian-capture = "obsidian_capture.cli:main"

[project.urls]
Homepage = "https://github.com/mkerddev/obsidian-capture"
"Bug Reports" = "https://github.com/mkerddev/obsidian-capture/issues"
"Source" = "https://github.com/mkerddev/obsidian-capture"

[tool.hatch.build.targets.wheel]
packages = ["src/obsidian_capture"]

[tool.ruff]
src = ["src"]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["S101"]  # Allow assert in tests

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]